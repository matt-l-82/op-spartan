{"version":3,"sources":["webpack:///js/give-annual-receipts-admin.js","webpack:///webpack/bootstrap c738d431c7014ae0269f","webpack:///./assets/src/js/admin/give-annual-receipts-admin.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","jQuery","document","ready","$","controlStatus","controlMonth","controlDay","init","this","initTaxYearEndDateControls","setControlsVisibility","registerEventHandlers","endMonth","giveAnnualReceipts","taxYearEndMonth","endDay","taxYearEndDay","populateMonths","populateDays","val","filter","hide","show","monthNames","monthName","monthOption","createElement","value","textContent","append","month","year","Date","getFullYear","daysInMonth","getDate","empty","dayOption","self","on","status"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA4BAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,SAAAP,EAAAQ,EAAAC,GACAZ,EAAAa,EAAAV,EAAAQ,IACAG,OAAAC,eAAAZ,EAAAQ,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAf,GACA,GAAAQ,GAAAR,KAAAgB,WACA,WAA2B,MAAAhB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,GAGAzB,IAAA0B,EAAA,KDMM,SAAUtB,EAAQD,EAASH,GAEjCA,EAAoB,GACpBI,EAAOD,QAAUH,EAAoB,IAK/B,SAAUI,EAAQD,GE3ExBwB,OAAQC,UAAWC,MAAO,SAAUC,KAElCC,cAAeD,EAAG,qDAClBE,aAAcF,EAAG,mCACjBG,WAAYH,EAAG,iCAEfI,KAAM,WACLC,KAAKC,6BACLD,KAAKE,wBACLF,KAAKG,yBAGNF,2BAA4B,WAE3B,GAAIG,GAAWC,mBAAmBC,gBAC9BC,EAAWF,mBAAmBG,aAGlCR,MAAKS,iBACLT,KAAKU,aAAcN,GAGnBJ,KAAKH,aAAac,IAAKP,GACvBJ,KAAKF,WAAWa,IAAKJ,IAGtBL,sBAAuB,WAGjB,aAFQF,KAAKJ,cAAcgB,OAAQ,YAAaD,MAGpDhB,EAAG,uCAAwCkB,OAE3ClB,EAAG,uCAAwCmB,QAI7CL,eAAgB,WAMf,IAAM,GALFM,IACH,UAAW,WAAY,QAAS,QAAS,MAAO,OAChD,OAAQ,SAAU,YAAa,UAAW,WAAY,YAG7C7C,EAAI,EAAGA,EAAI,GAAIA,IAAM,CAC9B,GAAI8C,GAAsBD,EAAY7C,GAClC+C,EAAsBxB,SAASyB,cAAe,SAClDD,GAAYE,MAAcjD,EAAI,EAC9B+C,EAAYG,YAAcJ,EAE1BhB,KAAKH,aAAawB,OAAQJ,KAI5BP,aAAc,SAAUY,GACvB,GAAIC,IAAe,GAAIC,OAAMC,cACzBC,EAAc,GAAIF,MAAMD,EAAMD,EAAO,GAAIK,SAG7C3B,MAAKF,WAAW8B,OAGhB,KAAM,GAAI1D,GAAI,EAAGA,GAAKwD,EAAaxD,IAAM,CACxC,GAAI2D,GAAoBpC,SAASyB,cAAe,SAChDW,GAAUV,MAAcjD,EACxB2D,EAAUT,YAAclD,EAExB8B,KAAKF,WAAWuB,OAAQQ,KAI1B1B,sBAAuB,WAEtB,GAAI2B,GAAO9B,IAGXA,MAAKJ,cAAcmC,GAAI,SAAU,WAChCD,EAAK5B,sBAAuB8B,UAI7BhC,KAAKH,aAAakC,GAAI,SAAU,WAC/BD,EAAKpB,aAAcV,KAAKmB,YAMApB,UF8EtB,SAAU9B,EAAQD","file":"js/give-annual-receipts-admin.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1);\nmodule.exports = __webpack_require__(2);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\njQuery(document).ready(function ($) {\n\tvar GiveAnnualReceiptsSettings = {\n\t\tcontrolStatus: $('input[name=\"give_annual_receipts_enable_disable\"]'),\n\t\tcontrolMonth: $('#give_annual_receipts_tax_month'),\n\t\tcontrolDay: $('#give_annual_receipts_tax_day'),\n\n\t\tinit: function () {\n\t\t\tthis.initTaxYearEndDateControls();\n\t\t\tthis.setControlsVisibility();\n\t\t\tthis.registerEventHandlers();\n\t\t},\n\n\t\tinitTaxYearEndDateControls: function () {\n\t\t\t// Set tax year end month and day from localized JS.\n\t\t\tvar endMonth = giveAnnualReceipts.taxYearEndMonth;\n\t\t\tvar endDay = giveAnnualReceipts.taxYearEndDay;\n\n\t\t\t// Populate month and day options for the selected month.\n\t\t\tthis.populateMonths();\n\t\t\tthis.populateDays(endMonth);\n\n\t\t\t// Set initial values of controls.\n\t\t\tthis.controlMonth.val(endMonth);\n\t\t\tthis.controlDay.val(endDay);\n\t\t},\n\n\t\tsetControlsVisibility: function () {\n\t\t\tvar status = this.controlStatus.filter(':checked').val();\n\n\t\t\tif ('disabled' === status) {\n\t\t\t\t$('.set-annual-receipts-builder-option').hide();\n\t\t\t} else {\n\t\t\t\t$('.set-annual-receipts-builder-option').show();\n\t\t\t}\n\t\t},\n\n\t\tpopulateMonths: function () {\n\t\t\tvar monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n\t\t\tfor (var i = 0; i < 12; i++) {\n\t\t\t\tvar monthName = monthNames[i];\n\t\t\t\tvar monthOption = document.createElement('option');\n\t\t\t\tmonthOption.value = i + 1;\n\t\t\t\tmonthOption.textContent = monthName;\n\n\t\t\t\tthis.controlMonth.append(monthOption);\n\t\t\t}\n\t\t},\n\n\t\tpopulateDays: function (month) {\n\t\t\tvar year = new Date().getFullYear();\n\t\t\tvar daysInMonth = new Date(year, month, 0).getDate();\n\n\t\t\t// Remove existing day options.\n\t\t\tthis.controlDay.empty();\n\n\t\t\t// Populate day options for the provided month.\n\t\t\tfor (var i = 1; i <= daysInMonth; i++) {\n\t\t\t\tvar dayOption = document.createElement('option');\n\t\t\t\tdayOption.value = i;\n\t\t\t\tdayOption.textContent = i;\n\n\t\t\t\tthis.controlDay.append(dayOption);\n\t\t\t}\n\t\t},\n\n\t\tregisterEventHandlers: function () {\n\t\t\t// Make this available within callbacks.\n\t\t\tvar self = this;\n\n\t\t\t// Update settings visibility when add-on is enabled or disabled.\n\t\t\tthis.controlStatus.on('change', function () {\n\t\t\t\tself.setControlsVisibility(status);\n\t\t\t});\n\n\t\t\t// Update day options when month is changed.\n\t\t\tthis.controlMonth.on('change', function () {\n\t\t\t\tself.populateDays(this.value);\n\t\t\t});\n\t\t}\n\n\t\t// Initialize Annual Receipts settings.\n\t};GiveAnnualReceiptsSettings.init();\n});\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// js/give-annual-receipts-admin.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c738d431c7014ae0269f","jQuery( document ).ready( function( $ ) {\n\tvar GiveAnnualReceiptsSettings = {\n\t\tcontrolStatus: $( 'input[name=\"give_annual_receipts_enable_disable\"]' ),\n\t\tcontrolMonth: $( '#give_annual_receipts_tax_month' ),\n\t\tcontrolDay: $( '#give_annual_receipts_tax_day' ),\n\n\t\tinit: function() {\n\t\t\tthis.initTaxYearEndDateControls();\n\t\t\tthis.setControlsVisibility();\n\t\t\tthis.registerEventHandlers();\n\t\t},\n\n\t\tinitTaxYearEndDateControls: function() {\n\t\t\t// Set tax year end month and day from localized JS.\n\t\t\tvar endMonth = giveAnnualReceipts.taxYearEndMonth;\n\t\t\tvar endDay   = giveAnnualReceipts.taxYearEndDay;\n\n\t\t\t// Populate month and day options for the selected month.\n\t\t\tthis.populateMonths();\n\t\t\tthis.populateDays( endMonth );\n\n\t\t\t// Set initial values of controls.\n\t\t\tthis.controlMonth.val( endMonth );\n\t\t\tthis.controlDay.val( endDay );\n\t\t},\n\n\t\tsetControlsVisibility: function() {\n\t\t\tvar status = this.controlStatus.filter( ':checked' ).val();\n\n\t\t\tif ( 'disabled' === status ) {\n\t\t\t\t$( '.set-annual-receipts-builder-option' ).hide();\n\t\t\t} else {\n\t\t\t\t$( '.set-annual-receipts-builder-option' ).show();\n\t\t\t}\n\t\t},\n\n\t\tpopulateMonths: function() {\n\t\t\tvar monthNames = [\n\t\t\t\t'January', 'February', 'March', 'April', 'May', 'June',\n\t\t\t\t'July', 'August', 'September', 'October', 'November', 'December'\n\t\t\t];\n\n\t\t\tfor ( var i = 0; i < 12; i++ ) {\n\t\t\t\tvar monthName           = monthNames[ i ];\n\t\t\t\tvar monthOption         = document.createElement( 'option' );\n\t\t\t\tmonthOption.value       = i + 1;\n\t\t\t\tmonthOption.textContent = monthName;\n\n\t\t\t\tthis.controlMonth.append( monthOption );\n\t\t\t}\n\t\t},\n\n\t\tpopulateDays: function( month ) {\n\t\t\tvar year        = (new Date).getFullYear();\n\t\t\tvar daysInMonth = new Date( year, month, 0 ).getDate();\n\n\t\t\t// Remove existing day options.\n\t\t\tthis.controlDay.empty();\n\n\t\t\t// Populate day options for the provided month.\n\t\t\tfor ( var i = 1; i <= daysInMonth; i++ ) {\n\t\t\t\tvar dayOption         = document.createElement( 'option' );\n\t\t\t\tdayOption.value       = i;\n\t\t\t\tdayOption.textContent = i;\n\n\t\t\t\tthis.controlDay.append( dayOption );\n\t\t\t}\n\t\t},\n\n\t\tregisterEventHandlers: function() {\n\t\t\t// Make this available within callbacks.\n\t\t\tvar self = this;\n\n\t\t\t// Update settings visibility when add-on is enabled or disabled.\n\t\t\tthis.controlStatus.on( 'change', function() {\n\t\t\t\tself.setControlsVisibility( status );\n\t\t\t} );\n\n\t\t\t// Update day options when month is changed.\n\t\t\tthis.controlMonth.on( 'change', function() {\n\t\t\t\tself.populateDays( this.value );\n\t\t\t} );\n\t\t},\n\t}\n\n\t// Initialize Annual Receipts settings.\n\tGiveAnnualReceiptsSettings.init();\n} );\n\n\n\n// WEBPACK FOOTER //\n// ./assets/src/js/admin/give-annual-receipts-admin.js"],"sourceRoot":""}